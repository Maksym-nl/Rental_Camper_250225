{"version":3,"file":"static/js/186.f873cb88.chunk.js","mappings":"+MACAA,EAAAA,EAAAA,SAAAA,QAAyB,8CAElB,IAaMC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAE,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEZV,EAAAA,EAAAA,IAAU,YAADW,OAAaL,IAAM,KAAD,EAApC,OAARC,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,MAAI,OAEyC,OAFzCN,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEpBQ,QAAQC,MAAM,iCAADN,OAAkCL,EAAE,KAAAE,EAAAO,IAAYP,EAAAK,OAAA,SACtD,MAAI,yBAAAL,EAAAU,OAAA,GAAAb,EAAA,kBAEd,gBAR2Bc,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,I,qJCbb,SAASC,IACtB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,GAASC,EAAAA,EAAAA,MAUf,OATAC,EAAAA,EAAAA,YAAU,WACiB,SAAAC,IAKxB,OALwBA,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAAzB,SAAA6B,IAAA,IAAAC,EAAA,OAAA9B,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAA1B,KAAA,EAAA0B,EAAAzB,KAAA,GAE2BT,EAAAA,EAAAA,GAAgB4B,EAAOvB,IAAI,KAAD,EAA3C4B,EAAQC,EAAAvB,KACdgB,EAAWM,EAASP,SAASQ,EAAAzB,KAAA,eAAAyB,EAAA1B,KAAA,EAAA0B,EAAApB,GAAAoB,EAAA,iCAAAA,EAAAjB,OAAA,GAAAe,EAAA,mBAEhCb,MAAA,KAAAC,UAAA,EANc,WACUW,EAAAZ,MAAC,KAADC,UAAA,CAMzBe,EACF,GAAG,CAACP,EAAOvB,MAET+B,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGX,EAAQY,KAAI,SAAAC,GACX,OACEC,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOE,iBACXL,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOG,mBACXN,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,EAAOI,YAHJJ,EAAOlC,GAMpB,OAIR,C","sources":["api/api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://66b1f8e71ca8ad33d4f5f63e.mockapi.io';\n\nexport const fetchCampers = async (searchValue = '') => {\n  try {\n    // Выполняем запрос с фильтрацией по параметру query\n    const response = await axios.get(`/campers`, {\n      params: { query: searchValue },\n    });\n    return response.data || [];\n  } catch (error) {\n    console.error('Error fetching campers:', error);\n    return [];\n  }\n};\n\nexport const fetchCamperById = async id => {\n  try {\n    const response = await axios.get(`/campers/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching camper with id ${id}:`, error);\n    return null;\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCamperById } from 'api/api';\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const params = useParams();\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const responce = await fetchCamperById(params.id);\n        setReviews(responce.reviews);\n      } catch (error) {}\n    }\n    getReviews();\n  }, [params.id]);\n  return (\n    <div>\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>{review.reviewer_name}</p>\n              <p>{review.reviewer_rating}</p>\n              <p>{review.comment}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n"],"names":["axios","fetchCamperById","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee2","id","response","_context2","prev","next","concat","sent","abrupt","data","t0","console","error","stop","_x","apply","arguments","Reviews","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","params","useParams","useEffect","_getReviews","_callee","responce","_context","getReviews","_jsx","children","map","review","_jsxs","reviewer_name","reviewer_rating","comment"],"sourceRoot":""}